{
  "name": "vite-plugin-solid",
  "version": "2.2.5",
  "description": "solid-js integration plugin for vite 2",
  "type": "module",
  "files": [
    "dist"
  ],
  "main": "dist/cjs/index.cjs",
  "module": "dist/esm/index.mjs",
  "exports": {
    "import": "./dist/esm/index.mjs",
    "node": "./dist/cjs/index.cjs",
    "default": "./dist/cjs/index.cjs",
    "require": "./dist/cjs/index.cjs"
  },
  "types": "dist/types/index.d.ts",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/solidjs/vite-plugin-solid.git"
  },
  "keywords": [
    "vite",
    "vite plugin",
    "vitejs",
    "vitejs plugin",
    "vite-plugin",
    "solid"
  ],
  "author": "Alexandre Mouton-Brady <amoutonbrady@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/amoutonbrady/vite-plugin-solid/issues"
  },
  "homepage": "https://github.com/solidjs/vite-plugin-solid#readme",
  "dependencies": {
    "@babel/core": "^7.16.12",
    "@babel/preset-typescript": "^7.16.7",
    "babel-preset-solid": "^1.3.0",
    "merge-anything": "^5.0.2",
    "solid-js": "^1.3.3",
    "solid-refresh": "^0.4.0",
    "vite": "^2.7.13"
  },
  "devDependencies": {
    "@babel/plugin-transform-typescript": "^7.16.8",
    "@babel/preset-env": "^7.16.11",
    "@rollup/plugin-babel": "^5.3.0",
    "@rollup/plugin-commonjs": "^21.0.1",
    "@rollup/plugin-node-resolve": "^13.1.3",
    "@skypack/package-check": "^0.2.2",
    "@types/babel__core": "^7.1.18",
    "@types/node": "^17.0.12",
    "prettier": "^2.5.1",
    "rollup": "^2.66.1",
    "rollup-plugin-cleaner": "^1.0.0",
    "typescript": "^4.5.5"
  },
  "packageManager": "pnpm@6.24.4",
  "scripts": {
    "build": "rollup -c && tsc --emitDeclarationOnly",
    "dev": "rollup -c -w",
    "check": "package-check"
  },
  "readme": "<p>\r\n  <img width=\"100%\" src=\"https://raw.githubusercontent.com/solidjs/vite-plugin-solid/master/banner.png\" alt=\"Solid Vite Plugin\">\r\n</p>\r\n\r\n# âš¡ vite-plugin-solid\r\n\r\nA simple integration to run [solid-js](https://github.com/solidjs/solid) with [vite](https://github.com/vitejs/vite)\r\n\r\n<img alt=\"HMR gif demonstrationdemodemodemo\" src=\".github/hmr.gif\">\r\n\r\n# Got a question? / Need help?\r\n\r\nJoin [solid discord](https://discord.com/invite/solidjs) and check the [troubleshooting section](#troubleshooting) to see if your question hasn't been already answered.\r\n\r\n## Features\r\n\r\n- HMR with no configuration needed\r\n- Drop-in installation as a vite plugin\r\n- Minimal bundle size\r\n- Support typescript (`.tsx`) out of the box\r\n- Support code splitting out of the box\r\n\r\n## Requirements\r\n\r\nThis module 100% esm compatible. As per [this document](https://nodejs.org/api/esm.html) it is strongly recommended to have at least the version `14.13.0` of node installed.\r\n\r\nYou can check your current version of node by typing `node -v` in your terminal. If your version is below that one version I'd encourage you to either do an update globally or use a node version management tool such as [volta](https://volta.sh/) or [nvm](https://github.com/nvm-sh/nvm).\r\n\r\n## Quickstart\r\n\r\nYou can use the [vite-template-solid](https://github.com/solidjs/templates) starter templates similar to CRA:\r\n\r\n```bash\r\n$ npx degit solidjs/templates/js my-solid-project\r\n$ cd my-solid-project\r\n$ npm install # or pnpm install or yarn install\r\n$ npm run start # starts dev-server with hot-module-reloading\r\n$ npm run build # builds to /dist\r\n```\r\n\r\n## Installation\r\n\r\nInstall `vite`, `vite-plugin-solid` and `babel-preset-solid` as dev dependencies.\r\n\r\nInstall `solid-js` as dependency.\r\n\r\nYou have to install those so that you are in control to which solid version is used to compile your code.\r\n\r\n```bash\r\n# with npm\r\n$ npm install -D vite vite-plugin-solid babel-preset-solid\r\n$ npm install solid-js\r\n\r\n# with pnpm\r\n$ pnpm add -D vite vite-plugin-solid babel-preset-solid\r\n$ pnpm add solid-js\r\n\r\n# with yarn\r\n$ yarn add -D vite vite-plugin-solid babel-preset-solid\r\n$ yarn add solid-js\r\n```\r\n\r\nAdd it as plugin to `vite.config.js`\r\n\r\n```js\r\n// vite.config.ts\r\nimport { defineConfig } from 'vite';\r\nimport solidPlugin from 'vite-plugin-solid';\r\n\r\nexport default defineConfig({\r\n  plugins: [solidPlugin()],\r\n});\r\n```\r\n\r\n## Run\r\n\r\nJust use regular `vite` or `vite build` commands\r\n\r\n```json\r\n{\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"build\": \"vite build\"\r\n  }\r\n}\r\n```\r\n\r\n## API\r\n\r\n### options\r\n\r\n- Type: Object\r\n- Default: {}\r\n\r\n#### options.dev\r\n\r\n- Type: Boolean\r\n- Default: true\r\n\r\nThis will inject `solid-js/dev` in place of `solid-js` in dev mode. Has no effect in prod.\r\nIf set to false, it won't inject it in dev.\r\nThis is useful for extra logs and debug.\r\n\r\n#### options.hot\r\n\r\n- Type: Boolean\r\n- Default: true\r\n\r\nThis will inject HMR runtime in dev mode. Has no effect in prod.\r\nIf set to false, it won't inject the runtime in dev.\r\n\r\n#### options.ssr\r\n\r\n- Type: Boolean\r\n- Default: false\r\n\r\nThis will force SSR code in the produced files. This is experiemental and mostly not working yet.\r\n\r\n#### options.babel\r\n\r\n- Type: Babel.TransformOptions\r\n- Default: {}\r\n\r\nPass any additional [babel transform options](https://babeljs.io/docs/en/options). Those will be merged with the transformations required by Solid.\r\n\r\n#### options.solid\r\n\r\n- Type: [babel-plugin-jsx-dom-expressions](https://github.com/ryansolid/dom-expressions/tree/main/packages/babel-plugin-jsx-dom-expressions#plugin-options)\r\n- Default: {}\r\n\r\nPass any additional [babel-plugin-jsx-dom-expressions](https://github.com/ryansolid/dom-expressions/tree/main/packages/babel-plugin-jsx-dom-expressions#plugin-options).\r\nThey will be merged with the defaults sets by [babel-preset-solid](https://github.com/solidjs/solid/blob/main/packages/babel-preset-solid/index.js#L8-L25).\r\n\r\n#### options.typescript\r\n\r\n- Type: [@babel/preset-typescript](https://babeljs.io/docs/en/babel-preset-typescript)\r\n- Default: {}\r\n\r\nPass any additional [@babel/preset-typescript](https://babeljs.io/docs/en/babel-preset-typescript).\r\n\r\n#### options.extensions\r\n\r\n- Type: (string, [string, { typescript: boolean }])[]\r\n- Default: []\r\n\r\nAn array of custom extension that will be passed through the solid compiler.\r\nBy default, the plugin only transform `jsx` and `tsx` files.\r\nThis is useful if you want to transform `mdx` files for example.\r\n\r\n## Note on HMR\r\n\r\nStarting from version `1.1.0`, this plugin handle automatic HMR via [solid-refresh](https://github.com/solidjs/solid-refresh).\r\n\r\nAt this stage it's still early work but provide basic HMR. In order to get the best out of it there are couple of things to keep in mind:\r\n\r\n- When you modify a file every state below this component will be reset to default state (including the current file). The state in parent component is preserved.\r\n\r\n- The entrypoint can't benefit from HMR yet and will force a hard reload of the entire app. This is still really fast thanks to browser caching.\r\n\r\nIf at least one of this point is blocking to you, you can revert to the old behavior but [opting out the automatic HMR](#options) and placing the following snippet in your entry point:\r\n\r\n```jsx\r\nconst dispose = render(() => <App />, document.body);\r\n\r\nif (import.meta.hot) {\r\n  import.meta.hot.accept();\r\n  import.meta.hot.dispose(dispose);\r\n}\r\n```\r\n\r\n# Troubleshooting\r\n\r\n- It appears that Webstorm generate some weird triggers when saving a file. In order to prevent that you can follow [this thread](https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000154544-I-m-having-a-huge-problem-with-Webstorm-and-react-hot-loader-) and disable the **\"Safe Write\"** option in **\"Settings | Appearance & Behavior | System Settings\"**.\r\n\r\n- If one of your dependency spit out React code instead of Solid that means that they don't expose JSX properly. To get around it, you might want to manually exclude it from the [dependencies optimization](https://vitejs.dev/config/#optimizedeps-exclude)\r\n\r\n- If you are trying to make [directives](https://www.solidjs.com/docs/latest/api#use%3A___) work and they somehow don't try setting the `options.typescript.onlyRemoveTypeImports` option to `true`\r\n\r\n## Migration from v1\r\n\r\nThe master branch now target vite 2.\r\n\r\nThe main breaking change from previous version is that the package has been renamed from `@amoutonbrady/vite-plugin-solid` to `vite-plugin-solid`.\r\n\r\nFor other breaking changes, check [the migration guide of vite](https://vitejs.dev/guide/migration.html).\r\n\r\n# Credits\r\n\r\n- [solid-js](https://github.com/solidjs/solid)\r\n- [vite](https://github.com/vitejs/vite)\r\n"
}