{
  "version": 3,
  "sources": ["../solid-transition-group/dist/solid-transition-group.js"],
  "sourcesContent": ["import { createSignal, children, mergeProps, createComputed, untrack, batch, createEffect } from 'solid-js';\n\nconst Transition = props => {\n  let el;\n  let first = true;\n  const [s1, set1] = createSignal();\n  const [s2, set2] = createSignal();\n  const resolved = children(() => props.children);\n  const name = props.name || \"s\";\n  props = mergeProps({\n    name,\n    enterActiveClass: name + \"-enter-active\",\n    enterClass: name + \"-enter\",\n    enterToClass: name + \"-enter-to\",\n    exitActiveClass: name + \"-exit-active\",\n    exitClass: name + \"-exit\",\n    exitToClass: name + \"-exit-to\"\n  }, props);\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n\n  function enterTransition(el, prev) {\n    if (!first || props.appear) {\n      const enterClasses = props.enterClass.split(\" \");\n      const enterActiveClasses = props.enterActiveClass.split(\" \");\n      const enterToClasses = props.enterToClass.split(\" \");\n      onBeforeEnter && onBeforeEnter(el);\n      el.classList.add(...enterClasses);\n      el.classList.add(...enterActiveClasses);\n      requestAnimationFrame(() => {\n        el.classList.remove(...enterClasses);\n        el.classList.add(...enterToClasses);\n        onEnter && onEnter(el, endTransition);\n\n        if (!onEnter || onEnter.length < 2) {\n          el.addEventListener(\"transitionend\", endTransition, {\n            once: true\n          });\n          el.addEventListener(\"animationend\", endTransition, {\n            once: true\n          });\n        }\n      });\n\n      function endTransition() {\n        if (el) {\n          el.classList.remove(...enterActiveClasses);\n          el.classList.remove(...enterToClasses);\n          batch(() => {\n            s1() !== el && set1(el);\n            s2() === el && set2(undefined);\n          });\n          onAfterEnter && onAfterEnter(el);\n          if (props.mode === \"inout\") exitTransition(el, prev);\n        }\n      }\n    }\n\n    prev && !props.mode ? set2(el) : set1(el);\n  }\n\n  function exitTransition(el, prev) {\n    const exitClasses = props.exitClass.split(\" \");\n    const exitActiveClasses = props.exitActiveClass.split(\" \");\n    const exitToClasses = props.exitToClass.split(\" \");\n    if (!prev.parentNode) return endTransition();\n    onBeforeExit && onBeforeExit(prev);\n    prev.classList.add(...exitClasses);\n    prev.classList.add(...exitActiveClasses);\n    requestAnimationFrame(() => {\n      prev.classList.remove(...exitClasses);\n      prev.classList.add(...exitToClasses);\n    });\n    onExit && onExit(prev, endTransition);\n\n    if (!onExit || onExit.length < 2) {\n      prev.addEventListener(\"transitionend\", endTransition, {\n        once: true\n      });\n      prev.addEventListener(\"animationend\", endTransition, {\n        once: true\n      });\n    }\n\n    function endTransition() {\n      prev.classList.remove(...exitActiveClasses);\n      prev.classList.remove(...exitToClasses);\n      s1() === prev && set1(undefined);\n      onAfterExit && onAfterExit(prev);\n      if (props.mode === \"outin\") enterTransition(el, prev);\n    }\n  }\n\n  createComputed(prev => {\n    el = resolved();\n\n    while (typeof el === \"function\") el = el();\n\n    return untrack(() => {\n      if (el && el !== prev) {\n        if (props.mode !== \"outin\") enterTransition(el, prev);else if (first) set1(el);\n      }\n\n      if (prev && prev !== el && props.mode !== \"inout\") exitTransition(el, prev);\n      first = false;\n      return el;\n    });\n  });\n  return [s1, s2];\n};\n\nfunction getRect(element) {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n    width,\n    height\n  } = element.getBoundingClientRect();\n  const parentRect = element.parentNode.getBoundingClientRect();\n  return {\n    top: top - parentRect.top,\n    bottom,\n    left: left - parentRect.left,\n    right,\n    width,\n    height\n  };\n}\n\nconst TransitionGroup = props => {\n  const resolved = children(() => props.children);\n  const name = props.name || \"s\";\n  props = mergeProps({\n    name,\n    enterActiveClass: name + \"-enter-active\",\n    enterClass: name + \"-enter\",\n    enterToClass: name + \"-enter-to\",\n    exitActiveClass: name + \"-exit-active\",\n    exitClass: name + \"-exit\",\n    exitToClass: name + \"-exit-to\",\n    moveClass: name + \"-move\"\n  }, props);\n  const {\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onBeforeExit,\n    onExit,\n    onAfterExit\n  } = props;\n  const [combined, setCombined] = createSignal();\n  let p = [];\n  let first = true;\n  createComputed(() => {\n    const c = resolved();\n    const comb = [...c];\n    const next = new Set(c);\n    const prev = new Set(p);\n    const enterClasses = props.enterClass.split(\" \");\n    const enterActiveClasses = props.enterActiveClass.split(\" \");\n    const enterToClasses = props.enterToClass.split(\" \");\n    const exitClasses = props.exitClass.split(\" \");\n    const exitActiveClasses = props.exitActiveClass.split(\" \");\n    const exitToClasses = props.exitToClass.split(\" \");\n\n    for (let i = 0; i < c.length; i++) {\n      const el = c[i];\n\n      if (!first && !prev.has(el)) {\n        onBeforeEnter && onBeforeEnter(el);\n        el.classList.add(...enterClasses);\n        el.classList.add(...enterActiveClasses);\n        requestAnimationFrame(() => {\n          el.classList.remove(...enterClasses);\n          el.classList.add(...enterToClasses);\n          onEnter && onEnter(el, endTransition);\n\n          if (!onEnter || onEnter.length < 2) {\n            el.addEventListener(\"transitionend\", endTransition, {\n              once: true\n            });\n            el.addEventListener(\"animationend\", endTransition, {\n              once: true\n            });\n          }\n        });\n\n        function endTransition() {\n          if (el) {\n            el.classList.remove(...enterActiveClasses);\n            el.classList.remove(...enterToClasses);\n            onAfterEnter && onAfterEnter(el);\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < p.length; i++) {\n      const old = p[i];\n\n      if (!next.has(old) && old.parentNode) {\n        comb.splice(i, 0, old);\n        onBeforeExit && onBeforeExit(old);\n        old.classList.add(...exitClasses);\n        old.classList.add(...exitActiveClasses);\n        requestAnimationFrame(() => {\n          old.classList.remove(...exitClasses);\n          old.classList.add(...exitToClasses);\n        });\n        onExit && onExit(old, endTransition);\n\n        if (!onExit || onExit.length < 2) {\n          old.addEventListener(\"transitionend\", endTransition, {\n            once: true\n          });\n          old.addEventListener(\"animationend\", endTransition, {\n            once: true\n          });\n        }\n\n        function endTransition() {\n          old.classList.remove(...exitActiveClasses);\n          old.classList.remove(...exitToClasses);\n          onAfterExit && onAfterExit(old);\n          p = p.filter(i => i !== old);\n          setCombined(p);\n        }\n      }\n    }\n\n    p = comb;\n    setCombined(comb);\n  });\n  createEffect(nodes => {\n    const c = combined();\n    c.forEach(child => {\n      let n;\n\n      if (!(n = nodes.get(child))) {\n        nodes.set(child, n = {\n          pos: getRect(child),\n          new: !first\n        });\n      } else if (n.new) {\n        n.new = false;\n        n.newPos = getRect(child);\n      }\n\n      if (n.new) {\n        child.addEventListener(\"transitionend\", () => {\n          n.new = false;\n          child.parentNode && (n.newPos = getRect(child));\n        }, {\n          once: true\n        });\n      }\n\n      n.newPos && (n.pos = n.newPos);\n      n.newPos = getRect(child);\n    });\n\n    if (first) {\n      first = false;\n      return nodes;\n    }\n\n    c.forEach(child => {\n      const c = nodes.get(child);\n      const oldPos = c.pos;\n      const newPos = c.newPos;\n      const dx = oldPos.left - newPos.left;\n      const dy = oldPos.top - newPos.top;\n\n      if (dx || dy) {\n        c.moved = true;\n        const s = child.style;\n        s.transform = `translate(${dx}px,${dy}px)`;\n        s.transitionDuration = \"0s\";\n      }\n    });\n    document.body.offsetHeight;\n    c.forEach(child => {\n      const c = nodes.get(child);\n\n      if (c.moved) {\n        c.moved = false;\n        const s = child.style;\n        const moveClasses = props.moveClass.split(\" \");\n        child.classList.add(...moveClasses);\n        s.transform = s.transitionDuration = \"\";\n\n        function endTransition(e) {\n          if (e && e.target !== child || !child.parentNode) return;\n\n          if (!e || /transform$/.test(e.propertyName)) {\n            child.removeEventListener(\"transitionend\", endTransition);\n            child.classList.remove(...moveClasses);\n          }\n        }\n\n        child.addEventListener(\"transitionend\", endTransition);\n      }\n    });\n    return nodes;\n  }, new Map());\n  return combined;\n};\n\nexport { Transition, TransitionGroup };\n"],
  "mappings": "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",
  "names": []
}
