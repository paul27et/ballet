import { mergeProps, splitProps } from "solid-js";
import classNames from "./classnames";
import { useBootstrapPrefix, useBootstrapBreakpoints } from "./ThemeProvider";
import createUtilityClassName from "./createUtilityClasses";
import { Dynamic } from "solid-js/web";
const defaultProps = {
    as: "div",
};
const Stack = (p) => {
    const [local, props] = splitProps(mergeProps(defaultProps, p), [
        "as",
        "bsPrefix",
        "className",
        "direction",
        "gap",
    ]);
    const bsPrefix = useBootstrapPrefix(local.bsPrefix, local.direction === "horizontal" ? "hstack" : "vstack");
    const breakpoints = useBootstrapBreakpoints();
    return (<Dynamic component={local.as} {...props} className={classNames(local.className, bsPrefix, ...createUtilityClassName({
            gap: local.gap,
            breakpoints: breakpoints(),
        }))}>
      {props.children}
    </Dynamic>);
};
export default Stack;
