import { mergeProps, splitProps } from "solid-js";
import classNames from "./classnames";
import { useBootstrapPrefix } from "./ThemeProvider";
import { Dynamic } from "solid-js/web";
const defaultProps = {
    as: "div",
    fluid: false,
};
const Container = (p) => {
    const [local, props] = splitProps(mergeProps(defaultProps, p), [
        "as",
        "bsPrefix",
        "fluid",
        "className",
    ]);
    const prefix = useBootstrapPrefix(local.bsPrefix, "container");
    const suffix = typeof local.fluid === "string" ? `-${local.fluid}` : "-fluid";
    return (<Dynamic component={local.as} {...props} className={classNames(local.className, local.fluid ? `${prefix}${suffix}` : prefix)}>
      {props.children}
    </Dynamic>);
};
export default Container;
